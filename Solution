In this project Customer-segmentation-analysis-to-improve-conversion.
There are two datasets named "TRANSACTION_LINE.csv" and "USER_DATA.csv" 

• TRANSACTION_LINE.csv contains various details related to credit accounts of users- it provides a detailed 
record of credit-related transactions and account information,facilitating analysis and credit related decision-
making processes for financial institutions.

• USER_DATA.csv serves as a repository for Apex USER.It typically indcludes essential information about users.

Task 1: Data Cleaning and Importing  
• handling missing values-
In "USER_DATA.csv" dataset ,two columns have  completely missing values named "PHONE_NUMBER" and "ADDRESS".
BY USING SQL, drop two columns -
<!--ATLER TABLE USER_DATA
DROP COLUMN PHONE_NUMBER and ADDRESS.-->
• After removing the two columns, reimport both datasets into your database.
Task 2: Exploratory Data Analysis

1-Summary of active vs closed accounts.
Active Accounts:
•In active accounts, there will be missing column "closed date" while in closed account,closed date column will be listed there.
•The number of active accounts is represented by the variable "X".
•These are accounts that are currently operational and being used by user till now.
Closed Accounts:
•IN case of closed account, account_balance column "closed date" is mentioned there.

•The number of active accounts is represented by the variable "Y";
•These are accounts that have been terminated or are no longer in use.

2- Breakdown of account_types (e.g.,loans,credit cards) and their current balances.
SELECT
    tl.sactioned_amount,
    tl.account_balance,
    tl.highest_credit,
    tl.account_category
FROM
    "TRANSACTION_LINE" tl
GROUP BY
    tl.account_category,1,2,3;
3- Analysis of loan amounts vs account balances.
•Loan Amount is always greater than account balance for every  in account ,if that account doesn't have already some amount. 
•Analysis through loan amounts vs account balance-
SELECT 
MAX(CASE WHEN ownership_type='Joint Account' AND account_category='Two-Wheeler Loan' THEN sactioned_amount-account_balance ELSE NULL END) AS Joint_account_two_wheeler_loan,
  MAX(CASE WHEN ownership_type = 'Individual' AND account_category = 'Gold Loan' THEN sactioned_amount - account_balance ELSE NULL END) AS Individual_Gold_Loan,
    MAX(CASE WHEN account_category = 'Credit Card' THEN sactioned_amount - account_balance ELSE NULL END) AS Credit_Card,
    MAX(CASE WHEN account_category = 'Personal Loan' THEN sactioned_amount - account_balance ELSE NULL END) AS Personal_Loan,
    MAX(CASE WHEN account_category = 'Housing Loan' THEN sactioned_amount - account_balance ELSE NULL END) AS Housing_Loan,
    MAX(CASE WHEN account_category = 'Auto Loan' THEN sactioned_amount - account_balance ELSE NULL END) AS Auto_Loan,
    MAX(CASE WHEN account_category = 'Consumer Loan' THEN sactioned_amount - account_balance ELSE NULL END) AS Consumer_Loan
FROM "TRANSACTION_LINE"; 
 Output:-->
___________________________________________________________________________________________________________________________________
|joint_account_two_wheeler_loan | individual_gold_loan | credit_card  |  personal_loan | housing_loan | auto_loan | consumer_loan |
|-------------------------------|----------------------|--------------|----------------|--------------|-----------|---------------|
|          329959.0             |        49,962        |    49,985    |     499,955    | 17,49,66,023 |  999,994  |    99,989     |
|_______________________________|______________________|______________|________________|______________|___________|_______________|
4-Overview of the closure percentages for different loan types by ownership type (Individual vs Join Account) :
• Indivisual Ownership:
An individual owner holds the loan independently .
Closure percentages: The closure percentage for individual loans depend on various factors such as creditworthiness,loan terms, and market conditions
.Generally, individual loans have a diverse range of closure rates based on the borrower's financial situation ans external factors.
• Joint Ownership: 
Joint owners share ownership of the loan.
closure percentages: Joint accounts can be either beneficial or challenging.Here are some considerations:
  •Beneficial Aspects:
    •Additional FDIC Insurance: Joint accounts are FDIC insured for up to $250,000 per account owner. With two owners, the coverage extends to $500,000.
    •Shared Expenses: Couples or family members can use joint accounts to cover shared expenses or save for common goals.
    •Immediate Access: If one co-owner passes away, the surviving co-owner can access funds immediately.
Challenges:
    •Irrevocable: Typically, you cannot remove a co-owner once the joint account is established.
    •Credit Scores Matter: Lenders examine the credit scores of owners with 20% or more ownership when extending loans.
    •Risk of Compounded Credit Scores: Even if no single owner has low credit, the average credit score matters. Several owners with less-than-ideal scores may raise concerns.

Task 3: Creating required additional variables & Customer Segmentations
Create some additional variables and start doing segmentations based on different variables.
1- Let's start by segmenting customers based on FICO scores and account categories to see the distribution.
    •Objective: Segment customers based on their FICO scores and account categories.
    ⅰ•Understand the Data and Requirements:
     •FICO Score: A measure of a cusomter's crediworthiness.
     • Account categories: Types of accounts such as 'Credit Card','Personal Loan', etc
    ⅱ•Segment the Data:
     •Create Bins for FICO Scores: Define ranges or bins for different FICO score ranges.
     •Categorize Accounts: Use the existing account categories.
    ⅲ• Formulate the SQL Query:
     •Aggregate data based on FICO score ranges and account categories.
     •Use appropriate SQL functions to group and aggregate data.
-->Solution: 
SELECT 
 CASE 
 WHEN fico_score>= '300' AND fico_score<'579' THEN 'Poor'
 WHEN fico_score>= '580' AND fico_score<'669' THEN 'Fair'
 WHEN fico_score>= '670' AND fico_score<'793' THEN 'Good'
 WHEN fico_score>='740' AND fico_score<'799' THEN 'Very Good'
 WHEN fico_score>='800' AND fico_Score<'850' THEN 'Excellent' ELSE 'Unknown'
 END AS fico_score_category,account_category,
 count(*) AS num_customers FROM "TRANSACTION_LINE" tl 
 GROUP BY fico_score_category,account_category
 ORDER BY fico_score_category, account_category; 
2- Product Usage Segmentation:Categorizing customers by the types of accounts they hold (e.g.,Auto 
Loans,Credit Cards, etc.).
Solution :
• To categorize the customers by the types of accounts they hold , 
SELECT 
    tl.account_category AS loan_type,
    COUNT(*) AS quantity,
    tl.customer_id,
    CONCAT(ud.FIRST_NAME,' ', ud.LAST_NAME) AS name
FROM 
    "TRANSACTION_LINE" tl
JOIN 
    user_data ud 
    ON ud.CUSTOMER_ID = tl.customer_id 
    tl.account_category,
    tl.customer_id,
    ud.FIRST_NAME,
    ud.LAST_NAME; 

03- Account Activity Segmentation: Segmenting customers by the status of their accounts (whether they have more
active or closed accounts) .

1-Segmenting Active Accounts:

Select customer_id, count(*) as active_accounts_count
from transaction_line
where account_status ='active'
group by customer_id;

2-Segmenting Closed Accounts

Select customer_id ,count(*) as closed_accounts_count
from transaction_line 
where account_status='closed'
group by customer_id;

3-Segmenting Customers with Both Active and Closed Accounts

Select Distinct a.customer_id 
from
transaction line tl1
join
transaction line tl2 on tl1.customer_id=tl2.customer_id
where tl1.account_status='active' and tl2.account_status='closed';
4- Segmenting Based on Account Status and Activity

Select customer_id,
Sum(CASE WHEN account_status='active' THEN 1 ELSE 0 END) as active_accounts_count,
Sum(CASE WHEN account_status='closed' THEN 1 ELSE 0 END) as closed_accounts_count,
max(last_activity_date) as last_activity_date
from 
transaction line
group by customer_id;

5-Identifying Customers Who Have Not Logged In Recently (for Active Accounts)

Select customer_id, count(*) AS inactive_active_accounts_count
from transaction line
where account_status='active' and last_activity_date<DATE_SUB(CURDATE() ,INTERVAL 6 MONTH) 
group by customer_id;

6-Finding Closed Accounts with Reasons

Select cutomer_id,
count(*) as closed_accounts_count,
closure_reason
from transaction_line
where account_status='closed'
group by customer_id, closure_reason;
TASK 04- Cross -Selling Opportunities & Cohort Analysis:

1- Cohort Analysis: Looking at the behaviour of groups of customers who opened their accounts during a similar time
period.Create a cohort to reveal insights into customer retention and the life cycle of accounts .(for example: categorize
customers into cohorts based on their account opening dates and then analyse how these cohorts have behaved over time) & analyse
retention Rates (how long accounts stay open across different cohorts).
ⅰ-define Cohorts 
: To define cohorts based on account opening dates;
SELECT 
    CUSTOMER_ID,
    OPENING_DATE,
    DATE_TRUNC('quarter', OPENING_DATE) AS cohort
FROM 
    TRANSACTION_DATE;

ⅱ-Calculate Retention Rates
:To calculate retention rates for eah cohort over time (e.g.,monthly retention rates

 With cohort_data AS (
    SELECT 
        CUSTOMER_ID,
        OPENING_DATE,
        DATE_TRUNC('quarter'OPENING_DATE) AS cohort
    FROM 
        accounts
)

SELECT 
    cohort,
    EXTRACT(YEAR FROM OPENING_DATE) AS year,
    EXTRACT(MONTH FROM OPENING_DATE) AS month,
    COUNT(DISTINCT customer_id) AS total_customers,
    COUNT(DISTINCT CASE WHEN EXTRACT(MONTH FROM NOW()) - EXTRACT(MONTH FROM OPENING_DATE) >= 1 THEN customer_id END) AS month_1_retained_customers,
    COUNT(DISTINCT CASE WHEN EXTRACT(MONTH FROM NOW()) - EXTRACT(MONTH FROM OPENING_DATE) >= 2 THEN customer_id END) AS month_2_retained_customers,
    COUNT(DISTINCT CASE WHEN EXTRACT(MONTH FROM NOW()) - EXTRACT(MONTH FROM OPENING_DATE) >= 3 THEN customer_id END) AS month_3_retained_customers
FROM 
    cohort_data
GROUP BY 
    cohort, 
    year,
    month
ORDER BY 
    cohort, 
    year, 
    month;

2- Cross-Selling Opportunities: Identifying potential for offering new products to existing customers based on their vurrent holdinga snd behaviour
patterns.
 
    2.1. Identify Common Account Combinations:Look at customers who have multiple account types and identify common combinations.
        Assume you have a table `customer_accounts` with columns `customer_id` and `account_type`.

        Select
        account_type_combination,
        count(*) AS count_accounts
        from(select group_contact (DISTINCT account_type order by account_type) as account_type_combination
        From 
        customer_accounts
        group by customer_id
        ) AS account_combinations
        group by account_type_combination
        order by count_accounts desc;

    2.2. Predict likely Next Products: Based on product holding patterns and customer behaviour within cohorst.
            
        •To predict which products a customer might be interested in based on their current holdings and behavior.
        patterns, you can use techniques such as association rules mining or collaborative filtering.












 
